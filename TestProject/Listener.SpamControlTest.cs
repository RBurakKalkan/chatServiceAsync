/*
* DO NOT MODIFY THIS COMMENT
* Generated by devmate
* Test model: 7fc02cce-7092-4ff3-9482-e2430ce5483c
*/

using System;
using System.Collections.Generic;
using System.Reflection;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ServerTests
{
	[TestClass]
	public class SpamControlTestCase
	{
#region Test methods
		[DataTestMethod]
		[ExpectedReturnValueTests]
		public void SpamControlTest(NoThrowTestData data)
		{
			Server.Listener.SpamControl(data.Params.current, data.Params.data, data.Params.text);
		}
#endregion

#region Types
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		public struct NoThrowTestData
		{
			public string Name;
			public Parameters Params;
		}

		public struct Parameters
		{
			public System.Net.Sockets.Socket current;
			public byte[] data;
			public string text;
		}
#endregion

#region Test data
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		[AttributeUsage(AttributeTargets.Method)]
		private class ExpectedReturnValueTests : Attribute, ITestDataSource
		{
			public IEnumerable<object[]> GetData(MethodInfo methodInfo)
			{
				yield return new object[]
				{
					new NoThrowTestData
					{
						Name = @"1",
						Params = new Parameters
						{
							current = new System.Net.Sockets.Socket(System.Net.Sockets.AddressFamily.InterNetwork, System.Net.Sockets.SocketType.Stream, System.Net.Sockets.ProtocolType.Tcp),
							data = new byte[] { 32 },
							text = "Ahmet"
						}
					}
				};
			}

			public string GetDisplayName(MethodInfo methodInfo, object[] data)
			{
				return ((NoThrowTestData)data[0]).Name;
			}
		}
#endregion
	}
}

/*
WARNING: Modification of this comment will make it impossible to merge user-defined changes

BEGIN_CODEGEN_DATA
H4sIAAAAAAAAAO1V3W8SQRB/PhL+h7G+gKHXSmv8QI1NW5VEaCNoYggPy95QVu92ye5e8WL43525W6BQGh/7IiEwO/P
b+Z7Zo2f12jO4uIL+1RB6Vxfdjz9g+Lk7gPOrXu+yP2TpJ9RohccEJgUkeJsRzfwhOg+ZSTB9Ay+n8rgtJR6+PH7dPj
ydTk8OX5++ah9i+/TkWOKL01cnku4c1Wv1Wu6UvoFB4Txmne1jfG7SFKVXRru4tKvkLuQrTgNkLekpaY0zUx9/Vy4X6
cDniTIxOzg0JnXxN608nwjcYRe0yNDNhUQYoL1FyzJXr/2p16IR0+epcG5Mp3k+SZUEyWcYzEV2brS3Ji1BwlEeIrr0
1OIN+RMygn5mEtIWRaML4QUzeyVvXPIuf8/JfUy+os+t/i7SHEvzpTTYuzUq2TXX6JvhzJoF06wXEvpp8iV2O4qqSOI
virJEiYvvXG8wNL4WVmQulrm1qH0L7jKZ3uZ4/O2bHda8pABRJ1WMnL11uMUcKc6jo3eP9WHj1ylSIbgR1bQAP1MOXN
UfYHRagNLEROhxo2KivLGgjYcZWlzJJMlaMEEpctJkiGUXiijlYaHSFCp+hvaGsXpKJfLuySNHvm4W520uPey0x6YxN
jCelT61fucuv6w3erSuIt2q6PdNbKD3tIfh7KOPB0b+Qu/CP4R+27I5KTyOxmW/dfb4yL33j9bjSUvKMP+336NETpvs
zFO5JrnHb07cYGN9HArylBqg2nrNarFZdUvvRtikD+1AeANrLS3ornp5YHIr8V7PdS91TlkRkxTfmslP0jgav6fnqrz
TqKx39dSElcxkuS+DlqhQmCZgSx9A4wJWSipxQEUs2TNcdxARDxW8gw8Hzw9aK141TMTl+9uTs3U3CgMSkA8OUmOP5C
yh2XDuo8hUWsRdTQZIvDD2V+thRby244G3KLK9qGtrvJH06DBuKOfNdUgRT1zwM4zwHzhpw3KD4NElxMHZjMI9WLGXg
Qj/y2row47ZGX6un3LzVBSc1f1lbK1LtXkFVxkN9WzsvpdNRo6Ox814swKXe5YMn+n7F2UQGNwaCQAA
END_CODEGEN_DATA
*/
