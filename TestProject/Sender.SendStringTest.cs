/*
* DO NOT MODIFY THIS COMMENT
* Generated by devmate
* Test model: 2d10e134-f725-4cc6-8199-83f55dd520c9
*/

using System;
using System.Collections.Generic;
using System.Reflection;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace ClientTests
{
	[TestClass]
	public class SendStringTestCase
	{
#region Test methods
		[DataTestMethod]
		[ExpectedReturnValueTests]
		public void SendStringTest(NoThrowTestData data)
		{
			Client.Sender.SendString(data.Params.text);
		}
#endregion

#region Types
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		public struct NoThrowTestData
		{
			public string Name;
			public Parameters Params;
		}

		public struct Parameters
		{
			public string text;
		}
#endregion

#region Test data
//=========================================================================================================================
//Please modify this section only in the Modeleditor not here in the code, because otherwise it will cause merge conflicts!
//=========================================================================================================================
		[AttributeUsage(AttributeTargets.Method)]
		private class ExpectedReturnValueTests : Attribute, ITestDataSource
		{
			public IEnumerable<object[]> GetData(MethodInfo methodInfo)
			{
				yield return new object[]
				{
					new NoThrowTestData
					{
						Name = @"p1",
						Params = new Parameters
						{
							text = "Ahmet"
						}
					}
				};
			}

			public string GetDisplayName(MethodInfo methodInfo, object[] data)
			{
				return ((NoThrowTestData)data[0]).Name;
			}
		}
#endregion
	}
}

/*
WARNING: Modification of this comment will make it impossible to merge user-defined changes

BEGIN_CODEGEN_DATA
H4sIAAAAAAAAAO1V3U8aQRB/PhL+hyl9AQOHqLQqtalB2/IAGEGThvCw3A2wzXJLdvfES8P/3pm7AxQ1ffSlxMDszG+
+P6wfFAsHcNWHXn8I3f5V5/svGP7sDKDd73ave0OW/sAIjXAYwiSBEB8WRDN/iNbBQoeozuEobBxi4/ikNv181KydBM
Gn2mnj7Kx2ejxtNsOweXQYnJFOvVgoFmIroxkMEutw0Xr+9NtaKQyc1JH1U78y2Ifc4jSHbCVdGRht9dT599LGQg1cH
Ertc4BDrZX17yLp+EXgFocQiQXapQgQ2kpilMpssfCnWPBGTLeVsHZMr2U8UTKAgN8wwCgcOENGUoywVAaPdD4anFE4
eUHQzXVIxjxvdCWcYGY35Y1T3vXjkqLH8BZdbKJ7oWJMvafS3N2DluGet3JPD+dGr5hmsxDSV4V1OGjPy/LwWQmNv9M
tM86/EUYsrO/w0VVajF9T1ITJAueKbHNIlkjB1+sX7/Vh5zcKqbo8XHKagJtLCzbrOehIJSAjYiJ0efgwlE4biLSDOR
rcyAKSVWGCgYjJkiaWWUmipIOVVAoy/gLNjLHRlOru7Id3znw7AdaZOHCw1/Rdu3cwnv8ejXPrKT/tNzo0NiPtpukvX
eygb1nnqfnH0PDgh2mA/wfnXTKnw3LpqF2T2OGdFTMsb59DQZE662dHqJLdGSMf6Irnd+2tkwTnsLVShc5mCgc6NgG+
mJbOdRRTVcRE4Rc9+U0WR+Ov9M8j1Sln3jvRVOcXksn0fuVWvESiCsGkMUCEK9gYycQ5ymPJK2vxBOHxOsAFfCstG6X
qhpntAbHZwPOhf6bs8bgTrHQ5J0Rpw17nRP67ztYt36i9heGcpV0qkXAkr6de3aa3u+SbIPIalPdvfoWRo8Nxxd8t/P
qVxeQ3/f0Fwhzf8twHAAA=
END_CODEGEN_DATA
*/
